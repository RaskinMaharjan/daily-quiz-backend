spring:
  datasource:
    url: jdbc:mysql://localhost:3306/<db_name>?useSSL=false
    username:
    password:

  redis:
    host: localhost
    port: 6379

  jpa:
    show-sql: true
    hibernate:
      ddl-auto: update
      naming-strategy: org.hibernate.cfg.ImprovedNamingStrategy
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL5InnoDBDialect
  security:
    oauth2:
      client:
        use-current-uri: false
        registration:
          google:
            clientId:
            clientSecret:
            redirectUriTemplate: "{baseUrl}/v1/oauth2/callback/{registrationId}"
            scope:
            - email
            - profile
          facebook:
            clientId:
            clientSecret:
            redirectUriTemplate: "{baseUrl}/v1/oauth2/callback/{registrationId}"
            scope:
            - email
            - public_profile

        provider:
          facebook:
            authorizationUri: https://www.FACEBOOK.com/v3.0/dialog/oauth
            tokenUri: https://graph.FACEBOOK.com/v3.0/oauth/access_token
            userInfoUri: https://graph.FACEBOOK.com/v3.0/me?fields=id,first_name,middle_name,last_name,name,email,verified,is_verified,picture.width(250).height(250)

server:
  servlet:
  port: 8080

mail:
  host:
  port:
  username:
  password:
  verificationapi:
  resetpasswordapi:
  baseUrl:
  properties:
    mail:
      smtp:
        connectiontimeout: 5000
        timeout: 5000
        writetimeout: 5000
twilio:
  accountSid:
  authToken:
  fromPhoneNumber:

app:
  auth:
    tokenSecret:
    tokenExpirationMsec: 30000
  oauth2:
    googleClientId:
    # After successfully authenticating with the OAuth2 Provider,
    # we'll be generating an auth token for the member and sending the token to the
    # redirectUri mentioned by the frontend client in the /oauth2/authorize request.
    # We're not using cookies because they won't work well in mobile clients.
    authorizedRedirectUris:

mobile:
  googleClientId:

logging:
  file:

firebase:
  serverKey:
  apiUrl: